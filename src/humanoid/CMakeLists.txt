cmake_minimum_required(VERSION 2.8)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/dm  ${PROJECT_SOURCE_DIR}/src/dmu ${PROJECT_SOURCE_DIR}/src/dmgl ${PROJECT_SOURCE_DIR}/src/wxdmgl ${PROJECT_SOURCE_DIR}/src/mosek/6/tools/platform/linux64x86/h ${PROJECT_SOURCE_DIR}/src/humanoid/h )
LINK_DIRECTORIES(${PROJECT_BINARY_DIR}/lib )


#find_package(wxWidgets COMPONENTS core base gl REQUIRED)

#include( "${wxWidgets_USE_FILE}" )

#tell CMake to search first in directories listed in CMAKE_MODULE_PATH 
SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/CMakeScripts)
message("CMAKE_MODULE_PATH (search first) is ${CMAKE_MODULE_PATH}")


SET(wxWidgets_ROOT_DIR /usr/local/bin)
find_package(wxWidgets 2.9 COMPONENTS core base gl REQUIRED)
if(wxWidgets_FOUND)
  message("wxWidgets found successfully.")
  include( ${wxWidgets_USE_FILE} )
else()
  message(FATAL_ERROR "wxWidgets was not found!")
endif()

#if(wxWidgets_PFVERSION LESS 2.9)
#  message("wxWidgets Version ${wxWidgets_PFVERSION}")
#  #message(FATAL_ERROR "wxWidgets is not a high enough version!")
#
#else()
#  message("wxWidgets Version ${wxWidgets_PFVERSION}")
#
#endif()






SET(SRCS  cpp/humanoidWx.cpp
		  cpp/StateMachine.cpp
		  cpp/BalanceDemoStateMachine.cpp
		  cpp/JumpingStateMachine.cpp
		  cpp/BasicGLPane.cpp
		  cpp/MainFrame.cpp
		  cpp/Humanoid.cpp
          cpp/HumanoidController.cpp 
		  cpp/HumanoidDataLogger.cpp
		  cpp/HumanoidStateMachineController.cpp
		  cpp/SimulationThread.cpp
          cpp/CubicSpline.cpp
          cpp/CubicSplineTrajectory.cpp
          cpp/DataLogger.cpp
          cpp/GlobalDefines.cpp
		  cpp/GlobalFunctions.cpp
          cpp/TaskSpaceController.cpp
		  cpp/TaskSpaceControllerA.cpp
		  cpp/wxBoxSlider.cpp
          cpp/wxNumericTextCtrl.cpp)
ADD_EXECUTABLE(humanoid ${SRCS})


TARGET_LINK_LIBRARIES(humanoid ${wxWidgets_LIBRARIES} ${GLUT_LIBRARY} ${OPENGL_LIBRARY} dm dmu wxdmgl ${PROJECT_SOURCE_DIR}/src/mosek/6/tools/platform/linux64x86/bin/libmosek64.so ${PROJECT_SOURCE_DIR}/src/mosek/6/tools/platform/linux64x86/bin/libmoseknoomp64.so)






